name: Deployment

on: push

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: get code
        uses: actions/checkout@v3
      - name: install NodeJS
        uses: actions/setup-node@v3
      - name: cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: install dependencies
        run: npm ci
      - name: output
        run: echo "lint started"
      - name: run lint
        run: npm run lint

  test:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: get code
        uses: actions/checkout@v3
      - name: install NodeJS
        uses: actions/setup-node@v3
      - name: cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: install dependencies
        run: npm ci
      - name: run tests
        run: npm test

  build:
    needs: test
    runs-on: ubuntu-latest
    outputs:
      script-file: ${{ steps.publish.outputs.script-file }}  # Correct reference for output
    steps:
      - name: get code
        uses: actions/checkout@v3
      - name: install NodeJS
        uses: actions/setup-node@v3
      - name: cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: install dependencies
        run: npm ci
      - name: run build
        run: npm run build
      - name: publish JS filename
        id: publish
        run: |
          SCRIPT_FILE=$(find dist/assets/*.js -type f -print -quit)
          echo "script-file=$SCRIPT_FILE" >> $GITHUB_ENV
      - name: upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-files
          path: dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: deploy
        run: echo "deploying..."
      - name: output file name
        run: echo "${{ needs.build.outputs.script-file }}"